import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
pd.options.mode.chained_assignment = None



Actividad 1: crear un arreglo de 4 dimensiones ordenados por la edad o nombre

cabecera=[('nombre', 'S10'), ('edad', int)]
datos=[('NAUN', 22), ('PETER', 26), ('MARGOT', 19), ('STEFANY', 22)]
usuarios=np.array(datos, dtype=cabecera)
np.sort(usuarios, order='edad')


Actividad 2: Con los datos de canciones elija 3 columnas que usted desee y ordenelas ascendentemente.


data=pd.read_csv('musica.csv')
df=pd.DataFrame(data)
newData=df[['name','danceability','energy']]
newData.sort_values(['name','danceability','energy'])


Actividad 3: Con estos datos que ya tienes agrega una nueva columna para que puedas predecir, en esa columna ahora vas a tener el país del programado. Ojo, recuerda que la regresión lineal simple solo trabaja con datos continuos, así que cada país deberás represarlo con un número, por ejemplo Ecuador=1, España=2.


dataset_salarios=pd.read_csv('salarios.csv')
dataset_salarios.head()


dataset_salarios['pais']=np.random.randint(1, 7, dataset_salarios.shape[0])
for i in dataset_salarios.index:
  if dataset_salarios['Salario'][i]>=700 and dataset_salarios['Salario'][i]<750:
    dataset_salarios['pais'][i]=1
  elif dataset_salarios['Salario'][i]>=750 and dataset_salarios['Salario'][i]<800:
    dataset_salarios['pais'][i]=2
  elif dataset_salarios['Salario'][i]>=800 and dataset_salarios['Salario'][i]<850:
    dataset_salarios['pais'][i]=3
  elif dataset_salarios['Salario'][i]>=850 and dataset_salarios['Salario'][i]<900:
    dataset_salarios['pais'][i]=4
  else:
      dataset_salarios['pais'][i]=5
dataset_salarios


x=dataset_salarios.iloc[:,2:3].values
y=dataset_salarios.iloc[:, 1].values
x_train, x_test, y_train, y_test=train_test_split(x,y, test_size=0.2, random_state=0)
x_train


regresion=LinearRegression()
regresion.fit(x_train, y_train)
LinearRegression()
vision_train=plt
vision_train.scatter(x_train, y_train, color='blue')
vision_train.plot(x_train, regresion.predict(x_train), color='black')
vision_train.title('Salario vs País (Entrenamiento)')
vision_train.xlabel('Pais')
vision_train.ylabel('Salario')
vision_train.show()
